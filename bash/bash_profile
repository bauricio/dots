#source the configuration of the path
source "$HOME/.dots/bash/conf/path"

#source the configuration of the aliases
source "$HOME/.dots/bash/conf/aliases"

#source the configuration of the functions
source "$HOME/.dots/bash/conf/functions"

#source general configuration
source "$HOME/.dots/bash/conf/general"

#source rvm configuration
source "$HOME/.dots/bash/conf/rvm"

#source bash_completion configuration
source "$HOME/.dots/bash/conf/bash_completion"

#source bash_profile.local if it exists
if [ -e "$HOME/.bash_profile.local" ]; then
  source "$HOME/.bash_profile.local"
fi


  send_commits() {
    if [ "$#" -ne "2" ]; then echo "Usage: send_commits number-of-commits /path/to/mounted/workspace/project" >&2; return 1; fi

    git log --name-status -n "$1" | grep 'ecom' | sort -k2 | uniq -f1 | while read status line;
    do
      from="$line";
      to="${2}/${line#*/}";
      case "$status" in
        A|M)
          echo "Copying from:"; echo "    ${from}"; echo "to"; echo "    ${to}";
          mkdir -p "$(dirname "${to}")"
          /bin/cp -f "${from}" "${to}"
          ;;
        D)
          echo "Deleting file: $to"
          /bin/rm -f "$to"
          ;;
      esac
      echo "---- ---- ---- ---- ----"
    done
  }

  echo_send() {
    if [ "$#" -ne "2" ]; then echo "Usage: send_commits number-of-commits /path/to/mounted/workspace/project" >&2; return 1; fi

    git log --name-status -n "$1" | grep 'ecom' | sort -k2 | uniq -f1 | while read status line;
    do
      from="$line";
      to="${2}/${line#*/}";
      echo "$line - $status - $from - $to";
    done
  }

  send_modified_files () { 
    if [ "$#" -ne "1" ]; then
      echo "Usage: send_modified_files /path/on/vm/to/workspace/project" 1>&2;
      return 1;
    fi;
    git ls-files --modified | while read line;
    do
      from="$line";
      to="${1}/${line#*/}";
      echo /bin/cp -f "'${from}'" "'${to}'";
      mkdir -p "$(dirname "${to}")";
      /bin/cp -f "${from}" "${to}";
    done
  }

  alias iso='while sleep 1; do echo "Going ..."; curl -s "http://ft04.gid.gap.com:8000/invoke?operation=build&amp;objectname=CruiseControl+Project%3Aname%3Dtrunk-allocation.isolated.functional-test" | grep 'Invocation'; done'

